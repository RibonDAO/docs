"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[286],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=c(r),d=a,m=f["".concat(u,".").concat(d)]||f[d]||p[d]||i;return r?n.createElement(m,o(o({ref:t},l),{},{components:r})):n.createElement(m,o({ref:t},l))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3975:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],s={sidebar_position:2},u="Creating a request",c={unversionedId:"interface/api-requests/creating-a-request",id:"interface/api-requests/creating-a-request",title:"Creating a request",description:"In order to create a new request, you can use our cli generators. You can use on the terminal: yarn generate.",source:"@site/docs/interface/api-requests/creating-a-request.mdx",sourceDirName:"interface/api-requests",slug:"/interface/api-requests/creating-a-request",permalink:"/docs/interface/api-requests/creating-a-request",draft:!1,editUrl:"https://github.com/RibonDAO/docs/docs/interface/api-requests/creating-a-request.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/interface/api-requests/intro"},next:{title:"Api hooks",permalink:"/docs/interface/api-requests/api-hooks"}},l={},p=[],f={toc:p};function d(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"creating-a-request"},"Creating a request"),(0,i.kt)("p",null,"In order to create a new request, you can use our cli generators. You can use on the terminal: ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn generate"),".\nThen you should select the ",(0,i.kt)("inlineCode",{parentName:"p"},"service API")," option and give it a name, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"users"),".\nIt will create a new folder in the ",(0,i.kt)("inlineCode",{parentName:"p"},"src/services/api")," folder with the request and its tests."),(0,i.kt)("p",null,"You should normally use the request helpers to create the request. They are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"apiGet - used to make a GET request"),(0,i.kt)("li",{parentName:"ul"},"apiPost - used to make a POST request"),(0,i.kt)("li",{parentName:"ul"},"apiPut - used to make a PUT request"),(0,i.kt)("li",{parentName:"ul"},"apiDelete - used to make a DELETE request")),(0,i.kt)("p",null,"They can be imported from the index file of ",(0,i.kt)("inlineCode",{parentName:"p"},"src/services/api")),(0,i.kt)("p",null,"You normally will want to test if the request calls axios api with correct params (such as url, headers and params).\nA good file to look for an example is the following: ",(0,i.kt)("inlineCode",{parentName:"p"},"src/services/api/nonProfitsApi/index.test.ts")))}d.isMDXComponent=!0}}]);